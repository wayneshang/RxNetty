// examples are in Java 8 while rest of projects are Java 6
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile project(':rxnetty')
    compile project(':rxnetty-servo')
    compile "io.reactivex:rxjava-string:1.0.0"
    compile "org.slf4j:slf4j-log4j12:${slf4j_version}"
}

/**
 * Tasks to run examples.
 */

task runHelloWorldClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run Hello World client"

    main = "io.reactivex.netty.examples.http.helloworld.HelloWorldClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runHelloWorldServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run Hello World server"

    main = "io.reactivex.netty.examples.http.helloworld.HelloWorldServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runPlainTextServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run Plain text HTTP server"

    main = "io.reactivex.netty.examples.http.plaintext.PlainTextServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runPlainTextClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run Plain text HTTP client"

    args "8111"
    main = "io.reactivex.netty.examples.http.helloworld.HelloWorldClient"
    classpath = sourceSets.main.runtimeClasspath
}

task runCpuIntensiveHttpServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run an HTTP server which does CPU intensive work."

    main = "io.reactivex.netty.examples.http.plaintext.PlainTextServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runCpuIntensiveHttpClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run an HTTP client for the CPU intensive server."

    args "8790"
    main = "io.reactivex.netty.examples.http.helloworld.HelloWorldClient"
    classpath = sourceSets.main.runtimeClasspath
}

task runCpuIntensiveTcpServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run a TCP server which does CPU intensive work."

    main = "io.reactivex.netty.examples.http.plaintext.PlainTextServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runCpuIntensiveTcpClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run a TCP client for the CPU intensive server."

    args "8790"
    main = "io.reactivex.netty.examples.http.helloworld.HelloWorldClient"
    classpath = sourceSets.main.runtimeClasspath
}

task runSslHelloWorldClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run SSL Hello World client"

    main = "io.reactivex.netty.examples.http.ssl.SslHelloWorldClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runSslHelloWorldServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run SSL Hello World server"

    main = "io.reactivex.netty.examples.http.ssl.SslHelloWorldServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runSimplePostClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run simple POST client"

    main = "io.reactivex.netty.examples.http.post.SimplePostClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runSimplePostServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run simple POST server"

    main = "io.reactivex.netty.examples.http.post.SimplePostServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runChunkClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run HTTP chunked encoding client"

    main = "io.reactivex.netty.examples.http.chunk.HttpChunkClient"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("word") ) {
        args = [word]
    }
}
task runChunkServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run HTTP chunked encoding server"

    main = "io.reactivex.netty.examples.http.chunk.HttpChunkServer"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("textFile") ) {
        args = [textFile]
    }
}

task runSseClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run Server side events client"

    main = "io.reactivex.netty.examples.http.sse.HttpSseClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runSseServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run server side events server"

    main = "io.reactivex.netty.examples.http.sse.HttpSseServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runLogTailClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run log tail client"

    main = "io.reactivex.netty.examples.http.logtail.LogTailClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runLogTailAggregator (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run log tail aggregator"

    main = "io.reactivex.netty.examples.http.logtail.LogAggregator"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("portFrom") && project.hasProperty("portTo") ) {
        args = [portFrom, portTo]
    }
}
task runLogTailProducer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run log tail producer"

    main = "io.reactivex.netty.examples.http.logtail.LogProducer"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("port") && project.hasProperty("interval") ) {
        args = [port, interval]
    }
}

task runWordCounterClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run word counter client"

    main = "io.reactivex.netty.examples.http.wordcounter.WordCounterClient"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("textFile") ) {
        args = [textFile]
    }
}
task runWordCounterServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run server side events server"

    main = "io.reactivex.netty.examples.http.wordcounter.WordCounterServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runWebSocketHelloClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run WebSocket client"

    main = "io.reactivex.netty.examples.http.websocket.WebSocketHelloClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runWebSocketHelloServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run WebSocket server server"

    main = "io.reactivex.netty.examples.http.websocket.WebSocketHelloServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runTcpEchoClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run TCP echo client"

    main = "io.reactivex.netty.examples.tcp.echo.TcpEchoClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runTcpEchoServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run TCP echo server"

    main = "io.reactivex.netty.examples.tcp.echo.TcpEchoServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runSslTcpEchoClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run SSL TCP echo client"

    main = "io.reactivex.netty.examples.tcp.ssl.SslTcpEchoClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runSslTcpEchoServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run SSL TCP echo server"

    main = "io.reactivex.netty.examples.tcp.ssl.SslTcpEchoServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runTcpEventStreamClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run TCP event stream client"

    main = "io.reactivex.netty.examples.tcp.event.TcpEventStreamClient"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("delay") && project.hasProperty("events") ) {
        args = [delay, events]
    }
}
task runTcpEventStreamServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run TCP event stream server"

    main = "io.reactivex.netty.examples.tcp.event.TcpEventStreamServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runTcpIntervalClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run TCP interval client"

    main = "io.reactivex.netty.examples.tcp.interval.TcpIntervalClientTakeN"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("events") ) {
        args = [events]
    }
}
task runTcpIntervalServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run TCP interval server"

    main = "io.reactivex.netty.examples.tcp.interval.TcpIntervalServer"
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("interval") ) {
        args = [interval]
    }
}

task runUdpClient (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run UDP client"

    main = "io.reactivex.netty.examples.udp.HelloUdpClient"
    classpath = sourceSets.main.runtimeClasspath
}
task runUdpServer (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run UDP server"

    main = "io.reactivex.netty.examples.udp.HelloUdpServer"
    classpath = sourceSets.main.runtimeClasspath
}
